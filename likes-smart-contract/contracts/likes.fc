#include "imports/stdlib.fc";

;; Messages
(slice, slice) $Like$_load(slice $s) inline {
    var $user = $s~load_msg_addr();
    return ($s, $user);
}

(slice, int) $Withdraw$_load(slice $s) inline {
    var $amount = $s~load_coins();
    return ($s, $amount);
}

;; Storage
cell $Likes$_init_storage() inline {
    return get_data();  ;; Повертаємо безпосередньо cell замість slice
}

;; Contract
() recv_internal(int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) { 
        ;; Приймаємо TON монети
        return ();
    }
    
    slice $storage = get_data().begin_parse();
    var $admin = $storage~load_msg_addr();
    var $totalLikes = $storage~load_uint(32);
    var $likes = $storage~load_dict();
    
    int op = in_msg_body~load_uint(32);
    
    if (op == "like"c) {
        var ($msg_body, $user) = $Like$_load(in_msg_body);
        slice $sender = my_address();
        int $sender_hash = slice_hash($sender);
        
        var (found?, _) = $likes.udict_get?(256, $sender_hash);
        throw_unless(100, found?.slice_empty?());
        
        $likes~udict_set(256, $sender_hash, begin_cell().store_int(1, 1).end_cell().begin_parse());
        $totalLikes += 1;
        
        set_data(begin_cell()
            .store_slice($admin)
            .store_uint($totalLikes, 32)
            .store_dict($likes)
            .end_cell());
        return ();
    }
    
    if (op == "withdraw"c) {
        var ($msg_body, $amount) = $Withdraw$_load(in_msg_body);
        var cs = in_msg_full.begin_parse();
        slice sender = cs~load_msg_addr();  ;; спочатку парсимо cell slice, потім отримуємо адресу
        throw_unless(101, eq_slice(sender, $admin));
        throw_unless(102, $amount);
        
        var msg = begin_cell()
            .store_uint(0x18, 6)
            .store_slice($admin)
            .store_coins($amount)
            .store_uint(0, 1 + 4 + 4 + 64 + 32 + 1 + 1)
            .end_cell();
            
        send_raw_message(msg, 1);
        return ();
    }
    
    throw(0xffff);
}

;; Get methods
int hasLiked(slice user) method_id {
    var $storage = get_data().begin_parse();
    var $admin = $storage~load_msg_addr();
    var $totalLikes = $storage~load_uint(32);
    var $likes = $storage~load_dict();
    
    int user_hash = slice_hash(user);
    var (found?, _) = $likes.udict_get?(256, user_hash);
    return found?.slice_empty?() == 0 ? 1 : 0;
}

int getTotalLikes() method_id {
    var $storage = get_data().begin_parse();
    var $admin = $storage~load_msg_addr();
    var $totalLikes = $storage~load_uint(32);
    return $totalLikes;
}

;; Оновлена функція eq_slice для порівняння slice
int eq_slice(slice a, slice b) inline {
    ;; Використовуємо хешування для порівняння двох слайсів
    return slice_hash(a) == slice_hash(b);
}
